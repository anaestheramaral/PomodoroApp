{"version":3,"sources":["pages/timer/style.ts","components/button/styles.ts","components/button/index.tsx","assets/done-notification.mp3","hooks/timer/TimerContext.tsx","hooks/autoStart/StartContext.tsx","pages/timer/index.tsx","pages/settings/style.ts","components/settings/style.ts","hooks/usePersistedState.ts","styles/themes/light.ts","styles/themes/dark.ts","hooks/theme/ToggleThemeContext.tsx","hooks/theme/useToggleTheme.ts","components/settings/index.tsx","pages/settings/index.tsx","pages/about/styles.ts","pages/about/index.tsx","components/menu/styles.ts","components/menu/index.tsx","routes/index.tsx","styles/global.ts","App.tsx","index.tsx"],"names":["Container","styled","div","TimerContainer","Circle","props","theme","colors","primary","background","text","button","buttonsColor","buttonsBkg","shade","secondary","Button","children","rest","defaultTimer","session","break","longBreak","time","currentTime","startingTime","label","isActive","defautTimerState","seconds","setSeconds","TimerContext","createContext","TimerProvider","useState","Provider","value","StartStateContext","React","undefined","StartDispatchContext","startReducer","state","action","type","autoStart","Error","StartProvider","dispatch","useStartState","context","TimerPomodoro","useContext","count","setCount","useSound","doneAudio","play","useEffect","id","setInterval","handleSwitch","c","alert","clearInterval","Math","floor","slice","onClick","title","className","ControllersWrapper","Wrapper","usePersistedState","key","initialState","storageValue","localStorage","getItem","JSON","parse","setState","setItem","stringify","icons","fontWeight","ThemeContext","ThemeContextProvider","light","setTheme","toggleTheme","dark","useToggleTheme","Configs","dispach","useStartDispatch","checked","onChange","offColor","onColor","height","Settings","ContentWrapper","About","href","size","BurgerIcon","active","ListWrapper","StyledNavLink","NavLink","BurgerMenu","LogIn","Timer","Stats","LogOut","Menu","Close","isOpen","setIsOpen","handleMenu","exact","to","activeClassName","Routes","basename","path","component","createGlobalStyle","App","onBeforeunload","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"syDAEO,IAAMA,EAAYC,IAAOC,IAAV,KASTC,EAAiBF,IAAOC,IAAV,KA2CdE,EAASH,IAAOC,IAAV,KAIG,SAAAG,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,WAO1B,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,OAAOE,cASvC,SAAAJ,GAAK,OAAIA,EAAMC,MAAMC,OAAOG,QACR,SAAAL,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,W,0jBCxEtD,IAAMR,EAAYC,IAAOU,OAAV,KAEG,SAAAN,GAAK,OAAIA,EAAMC,MAAMC,OAAOK,gBAM/B,SAAAP,GAAK,OAAIA,EAAMC,MAAMC,OAAOM,cAEvC,SAAAR,GAAK,OAAIA,EAAMC,MAAMC,OAAOG,QACjB,SAAAL,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,WAOhC,SAAAH,GAAK,OAAIS,YAAM,IAAMT,EAAMC,MAAMC,OAAOM,eAQtC,SAAAR,GAAK,OAAIA,EAAMC,MAAMC,OAAOQ,aAElB,SAAAV,GAAK,OAAIS,YAAM,GAAKT,EAAMC,MAAMC,OAAOQ,cCpBtDC,EALuB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAaC,EAAhB,mCAEpC,aADA,CACC,EAAD,2BAAeA,GAAf,aAAsBD,MCRT,MAA0B,8CC0BnCE,EAAkC,CACtCC,QAAS,KACTC,MAAO,IACPC,UAAW,KACXC,KAAM,CAAEC,YAAa,KAASC,aAAc,MAC5CC,MAAO,QACPC,UAAU,GAGNC,EAAsC,CAC1CC,QAASV,EAETW,WAAY,cAEDC,EAAeC,wBAAiCJ,GAEhDK,EAAgB,SAAC,GAAsC,IAApChB,EAAmC,EAAnCA,SAAmC,EACnCiB,mBAA4Bf,GADO,mBAC1DU,EAD0D,KACjDC,EADiD,KAGjE,OACE,cAACC,EAAaI,SAAd,CAAuBC,MAAO,CAAEP,UAASC,cAAzC,SACGb,KCpCDoB,EAAoBC,qBAAuCC,GAC3DC,EAAuBF,qBAC3BC,GAGF,SAASE,EAAaC,EAAcC,GAClC,OAAQA,EAAOC,MACb,IAAK,cACH,MAAO,CAAEC,WAAYH,EAAMG,WAE7B,QACE,MAAM,IAAIC,MAAJ,iCAAoCH,EAAOC,QAKvD,SAASG,EAAT,GAA0D,IAAjC9B,EAAgC,EAAhCA,SAAgC,EAC7BqB,aAAiBG,EAAc,CACvDI,WAAW,IAF0C,mBAChDH,EADgD,KACzCM,EADyC,KAKvD,OACE,cAACX,EAAkBF,SAAnB,CAA4BC,MAAOM,EAAnC,SACE,cAACF,EAAqBL,SAAtB,CAA+BC,MAAOY,EAAtC,SACG/B,MAMT,SAASgC,IACP,IAAMC,EAAUZ,aAAiBD,GACjC,QAAgBE,IAAZW,EACF,MAAM,IAAIJ,MAAM,qDAElB,OAAOI,ECnCT,IA4IeC,EA5IiB,WAAO,IAAD,EACJC,qBAAWrB,GAAnCF,EAD4B,EAC5BA,QAASC,EADmB,EACnBA,WADmB,EAEVI,mBAAS,GAFC,mBAE7BmB,EAF6B,KAEtBC,EAFsB,OAIrBC,YAASC,GAAjBC,EAJ6B,oBAK5BZ,EAAcI,IAAdJ,UACRa,qBAAU,WACR,IAAMC,EAAKC,aAAY,YACI,IAArB/B,EAAQF,UAAqBE,EAAQN,KAAKC,YAAc,GAC1DM,EAAW,2BACND,GADK,IAERN,KAAM,CACJE,aAAcI,EAAQN,KAAKE,aAC3BD,YAAaK,EAAQN,KAAKC,YAAc,MAIb,IAA7BK,EAAQN,KAAKC,cACfiC,IAEAI,IACsB,UAAlBhC,EAAQH,OACV4B,GAAS,SAAAQ,GAAC,OAAKA,EAAI,EAAK,KACxBC,MAAM,gCAENA,MAAM,+BAGT,KACH,OAAO,WACLC,cAAcL,MAEf,CAAC9B,EAAS4B,IAEb,IAAMI,EAAe,WACG,UAAlBhC,EAAQH,MAERI,EADY,IAAVuB,EACS,2BACNxB,GADK,IAERN,KAAM,CACJE,aAAcI,EAAQP,UACtBE,YAAaK,EAAQP,WAEvBI,MAAO,QACPC,SAAUkB,IAID,2BACNhB,GADK,IAERN,KAAM,CACJC,YAAaK,EAAQR,MACrBI,aAAcI,EAAQR,OAExBK,MAAO,QACPC,SAAUkB,KAKdf,EAAW,2BACND,GADK,IAERN,KAAM,CACJE,aAAcI,EAAQT,QACtBI,YAAaK,EAAQT,SAEvBM,MAAO,QACPC,SAAUkB,MAqBhB,OACE,mCACE,cAAC7C,EAAD,UAEE,eAACG,EAAD,WACE,cAACC,EAAD,UACE,gCACE,2CACM6D,KAAKC,MAAMrC,EAAQN,KAAKC,YAAc,IAD5C,YACmD,YAC/CK,EAAQN,KAAKC,YAAc,IAC1B2C,OAAO,MAEZ,4BAAItC,EAAQH,aAGhB,8BACG2B,EADH,QAIA,gCACE,cAAC,EAAD,CAAQT,KAAK,SAASwB,QA/BhC,WACEtC,EAAW,2BACND,GADK,IAERF,SAAUkB,EACVtB,KAAM,CACJE,aAAcI,EAAQN,KAAKE,aAC3BD,YAAaK,EAAQN,KAAKE,kBAyBqB4C,MAAM,QAAjD,SACE,cAAC,IAAD,MAGF,cAAC,EAAD,CACEzB,KAAK,SACLyB,MAAOxC,EAAQF,SAAW,QAAU,OACpCyC,QAASvC,EAAQF,SAzC7B,WACEG,EAAW,2BAAKD,GAAN,IAAeF,UAAU,MAJrC,WACEG,EAAW,2BAAKD,GAAN,IAAeF,UAAU,MA4CzB2C,UAAU,OAJZ,SAMGzC,EAAQF,SAAW,cAAC,IAAD,IAAc,cAAC,IAAD,MAGpC,cAAC,EAAD,CACEiB,KAAK,SACLyB,MAAM,OACND,QAAS,WACPP,IACsB,UAAlBhC,EAAQH,OACV4B,GAAS,SAAAQ,GAAC,OAAKA,EAAI,EAAK,MAN9B,SAUE,cAAC,IAAD,iB,+MC3IP,IAAM9D,EAAYC,IAAOC,IAAV,K,wpECAf,IAAMF,EAAYC,IAAOC,IAAV,KAgBE,SAAAG,GAAK,OAAIA,EAAMC,MAAMC,OAAOQ,aAQ1B,SAAAV,GAAK,OAAIS,YAAM,GAAKT,EAAMC,MAAMC,OAAOQ,cAWvD,SAAAV,GAAK,OAAIS,YAAM,GAAKT,EAAMC,MAAMC,OAAOQ,cAUpCwD,EAAqBtE,IAAOC,IAAV,KAYlB,SAAAG,GAAK,OAAIA,EAAMC,MAAMC,OAAOQ,aAMjB,SAAAV,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,WACvC,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,OAAOE,cAiD5B+D,EAAUvE,IAAOC,IAAV,KC/FLuE,MAjBf,SAA8BC,EAAaC,GAA+B,IAAD,EAC7CzC,oBAAS,WACjC,IAAM0C,EAAeC,aAAaC,QAAQJ,GAE1C,OAAIE,EACKG,KAAKC,MAAMJ,GAEbD,KAP8D,mBAChEjC,EADgE,KACzDuC,EADyD,KAcvE,OAJAvB,qBAAU,WACRmB,aAAaK,QAAQR,EAAKK,KAAKI,UAAUzC,MACxC,CAACgC,EAAKhC,IAEF,CAACA,EAAOuC,IClBF,GACbZ,MAAO,QAEP9D,OAAQ,CACNC,QAAS,UACTO,UAAW,UAEXN,WAAY,UACZC,KAAM,OACN0E,MAAO,UACPxE,aAAc,UACdC,WAAY,WAGdwE,WAAY,KCdC,GACbhB,MAAO,OAEP9D,OAAQ,CACNC,QAAS,UAGTO,UAAW,UAEXN,WAAY,UACZC,KAAM,UACN0E,MAAO,UACPxE,aAAc,UAEdC,WAAY,WAGdwE,WAAY,KCJRC,EAAetD,wBAAgC,IAE/CuD,EAAiC,SAAC,GAAkB,IAAhBtE,EAAe,EAAfA,SAAe,EAC7BwD,EAAgC,SAAUe,GADb,mBAChDlF,EADgD,KACzCmF,EADyC,KAOvD,OACE,cAACH,EAAanD,SAAd,CAAuBC,MAAO,CAAEsD,YALlC,WACED,EAAyB,UAAhBnF,EAAM+D,MAAoBsB,EAAOH,IAIGlF,SAA7C,SACGW,KCdQ2E,OANf,WAGE,OAFgBxC,qBAAWkC,ICgLdO,GAvKW,WACxB,IAAMvF,EAAQ8C,qBAAWkC,KADK,EAEElC,qBAAWrB,GAAnCF,EAFsB,EAEtBA,QAASC,EAFa,EAEbA,WAET4D,EAAgBE,KAAhBF,YACFI,ET8BR,WACE,IAAM5C,EAAUZ,aAAiBE,GACjC,QAAgBD,IAAZW,EACF,MAAM,IAAIJ,MAAM,wDAElB,OAAOI,ESnCS6C,GACRlD,EAAcI,IAAdJ,UAER,OACE,eAAC,EAAD,WACE,0CACA,eAAC0B,EAAD,WACE,gCACE,4CACA,+BAAO1C,EAAQT,QAAU,KACzB,gCACE,wBACEwB,KAAK,SACLwB,QAAS,kBACPtC,EAAW,2BACND,GADK,IAERT,QAASS,EAAQT,QAAU,GAC3BG,KAAM,CACJE,aAAcI,EAAQT,QAAU,GAChCI,YAAaK,EAAQT,QAAU,QARvC,eAeA,wBACEwB,KAAK,SACLwB,QAAS,kBACPtC,EAAW,2BACND,GADK,IAERT,QAASS,EAAQT,QAAU,GAC3BG,KAAM,CACJE,aAAcI,EAAQT,QAAU,GAChCI,YAAaK,EAAQT,QAAU,QARvC,qBAkBJ,gCACE,6CACA,+BAAOS,EAAQR,MAAQ,KACvB,gCACE,wBACEuB,KAAK,SACLwB,QAAS,kBACPtC,EAAW,2BACND,GADK,IAERR,MAAOQ,EAAQR,MAAQ,GACvBE,KAAM,CACJE,aAAcI,EAAQR,MAAQ,GAC9BG,YAAaK,EAAQR,MAAQ,QARrC,eAeA,wBACEuB,KAAK,SACLwB,QAAS,kBACPtC,EAAW,2BACND,GADK,IAERR,MAAOQ,EAAQR,MAAQ,GACvBE,KAAM,CACJE,aAAcI,EAAQR,MAAQ,GAC9BG,YAAaK,EAAQR,MAAQ,QARrC,qBAkBJ,gCACE,6CACA,+BAAOQ,EAAQP,UAAY,KAC3B,gCACE,wBACEsB,KAAK,SACLwB,QAAS,kBACPtC,EAAW,2BACND,GADK,IAERP,UAAWO,EAAQP,UAAY,GAC/BC,KAAM,CACJE,aAAcI,EAAQP,UAAY,GAClCE,YAAaK,EAAQP,UAAY,QARzC,eAeA,wBACEsB,KAAK,SACLwB,QAAS,kBACPtC,EAAW,2BACND,GADK,IAERP,UAAWO,EAAQP,UAAY,GAC/BC,KAAM,CACJE,aAAcI,EAAQP,UAAY,GAClCE,YAAaK,EAAQP,UAAY,QARzC,wBAkBN,eAACkD,EAAD,WACE,4DACA,cAAC,IAAD,CACEb,GAAG,aACHqC,SAAuB,IAAdnD,EACToD,SAAU,kBAAMH,EAAQ,CAAElD,KAAM,iBAChCsD,SAAUpF,YAAM,IAAMR,EAAMC,OAAOQ,WACnCoF,QAAS7F,EAAMC,OAAOC,QACtB4F,OAAQ,QAGZ,eAAC5B,EAAD,WACE,+CACA,cAAC,IAAD,CACEb,GAAG,aACHqC,QAAyB,UAAhB1F,EAAM+D,MACf4B,SAAUP,EACVQ,SAAUpF,YAAM,IAAMR,EAAMC,OAAOQ,WACnCoF,QAAS7F,EAAMC,OAAOC,QACtB4F,OAAQ,QAGZ,wBACExD,KAAK,SACLwB,QAAS,kBACPtC,EAAW,2BACND,GADK,IAERT,QAAS,KACTC,MAAO,IACPC,UAAW,KACXC,KAAM,CACJE,aAAc,KACdD,YAAa,MAEfE,MAAO,YAZb,sCClJS2E,GARY,WACzB,OACE,cAAC,EAAD,UAEE,cAAC,GAAD,O,4tCCPC,IAAMrG,GAAYC,IAAOC,IAAV,MAOT,SAAAG,GAAK,OAAIA,EAAMC,MAAMC,OAAOQ,aAa5BuF,GAAiBrG,IAAOC,IAAV,MAqBZ,SAAAG,GAAK,OAAIA,EAAMC,MAAMC,OAAOQ,aAY5B,SAAAV,GAAK,OAAIA,EAAMC,MAAMC,OAAOQ,aCM5BwF,GA1DS,WACtB,OACE,eAAC,GAAD,WACE,uCACA,eAACD,GAAD,WACE,oCAEE,0DAFF,0GAMA,uBACA,sMAKA,uBACA,8JAIA,uBACA,4CACA,8BACE,uBACA,+BACE,gEACA,uFACA,mDACA,wGAIA,wKAIA,8JAMJ,mBAAGhC,UAAU,OAAb,SACE,0CAEQ,IACN,mBAAGkC,KAAK,mDAAR,0E,y4DC3CZ,IAAMC,GACI,QAIGC,GAAazG,IAAOC,IAAV,MAOX,SAAAG,GAAK,OAAKA,EAAMsG,OAAS,QAAU,UAClC,SAAAtG,GAAK,OAAIA,EAAMC,MAAMC,OAAOQ,aAO/B,SAAAV,GAAK,OAAIS,YAAM,GAAKT,EAAMC,MAAMC,OAAOQ,cAKpCf,GAAYC,IAAOC,IAAV,MAEX,SAAAG,GAAK,OAAKA,EAAMsG,OAAS,QAAU,WAK9B,SAAAtG,GAAK,OAAKA,EAAMsG,OAAStG,EAAMC,MAAMC,OAAOC,QAAU,SAM/CiG,IAEC,SAAApG,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,WAIvCoG,GAAc3G,IAAOC,IAAV,MAQX,SAAAG,GAAK,OAAKA,EAAMsG,OAAS,QAAU,SAWrBF,IAOdI,GAAgB5G,YAAO6G,IAAP7G,CAAH,MAyBb,SAAAI,GAAK,OAAIA,EAAMC,MAAMC,OAAO6E,QAM1BtE,YAAM,GAAK,YAKX,SAAAT,GAAK,OAAIA,EAAMC,MAAMC,OAAOQ,YAIpB0F,IACA,SAAApG,GAAK,OAAKA,EAAMsG,OAAS,aAAe,YAC5C,SAAAtG,GAAK,OAAKA,EAAMsG,OAAS,OAAS,YAGtC,SAAAtG,GAAK,OAAIA,EAAMC,MAAMC,OAAOQ,aCxC5BgG,GAtEc,WAC3B,IAAM3B,EAAQ,CACZ4B,MAAO,cAAC,IAAD,CAAcP,KAAM,GAAIpC,MAAM,UACrC4C,MAAO,cAAC,IAAD,CAAYR,KAAM,GAAIpC,MAAM,UACnC6C,MAAO,cAAC,IAAD,CAAeT,KAAM,GAAIpC,MAAM,eACtCgC,SAAU,cAAC,KAAD,CAAYI,KAAM,GAAIpC,MAAM,aACtC8C,OAAQ,cAAC,KAAD,CAAUV,KAAM,GAAIpC,MAAM,WAClCkC,MAAO,cAAC,IAAD,CAAcE,KAAM,GAAIpC,MAAM,UACrC+C,KAAM,cAAC,KAAD,CAAQX,KAAM,GAAIpC,MAAM,SAC9BgD,MAAO,cAAC,IAAD,CAASZ,KAAM,GAAIpC,MAAM,gBATD,EAYLnC,oBAAS,GAZJ,mBAY1BoF,EAZ0B,KAYlBC,EAZkB,KAa3BC,EAAa,WACjBD,GAAWD,IAGb,OACE,eAAC,GAAD,CAAWX,OAAQW,EAAnB,UACE,cAACZ,GAAD,CAAYC,OAAQW,EAApB,SACE,wBAAQ1E,KAAK,SAASwB,QAASoD,EAA/B,SACGF,EAASlC,EAAMiC,MAAQjC,EAAMgC,SAGlC,cAACR,GAAD,CAAaD,OAAQW,EAArB,SACE,8BACE,+BACE,6BACE,eAACT,GAAD,CACEY,OAAK,EACLC,GAAG,IACHC,gBAAgB,WAChBvD,QAASoD,EACTb,OAAQW,EALV,UAOGlC,EAAM6B,MACP,8CAIJ,6BACE,eAACJ,GAAD,CACEa,GAAG,YACHC,gBAAgB,WAChBvD,QAASoD,EACTb,OAAQW,EAJV,UAMGlC,EAAMiB,SACP,iDAIJ,6BACE,eAACQ,GAAD,CACEa,GAAG,SACHC,gBAAgB,WAChBvD,QAASoD,EACTb,OAAQW,EAJV,UAMGlC,EAAMmB,MACP,yDCtDDqB,GAVU,kBACvB,eAAC,IAAD,CAAYC,SAAS,IAArB,UACE,cAAC,GAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIL,OAAK,EAACM,UAAWd,IACjC,cAAC,IAAD,CAAOa,KAAK,YAAYC,UAAW1B,KACnC,cAAC,IAAD,CAAOyB,KAAK,SAASC,UAAWxB,Y,+nBCbvByB,mBAAf,MAakB,SAAA3H,GAAK,OAAIA,EAAMC,MAAMC,OAAOE,cACjC,SAAAJ,GAAK,OAAIA,EAAMC,MAAMC,OAAOG,QAOtB,SAAAL,GAAK,OAAIA,EAAMC,MAAM+E,cAI3B,SAAAhF,GAAK,OAAIA,EAAMC,MAAMC,OAAOG,QCJ1BuH,GAdO,WAAO,IACnB3H,EAAUsF,KAAVtF,MACR,OACE,cAAC,IAAD,CAAc4H,eAAgB,iBAAM,0BAApC,SACE,eAAC,IAAD,CAAe5H,MAAOA,EAAtB,UACE,cAAC,GAAD,IACA,cAAC,IAAD,UACE,cAAC,GAAD,YCTV6H,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UACE,cAACtF,EAAD,UACE,cAAC,EAAD,UACE,cAAC,GAAD,YAKRuF,SAASC,eAAe,W","file":"static/js/main.12b366ce.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100vw;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n`;\n\nexport const TimerContainer = styled.div`\n  display: block;\n  max-width: 450px;\n  /* height: 80vh; */\n  /* padding-right: 18px; */\n  @media (min-width: 641px) {\n    /* padding-left: 108px; */\n    padding-right: 0;\n    /* padding-left: 18px; */\n  }\n\n  /* border: 1px solid black; */\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  margin: 0 auto;\n\n  p {\n    margin-top: 30px;\n  }\n\n  > div {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    button {\n      margin-top: 30px;\n      /* margin-right: 16px; */\n\n      & + button {\n        margin-left: 16px;\n      }\n    }\n    .Play {\n      width: 60px;\n      height: 60px;\n    }\n  }\n`;\n\nexport const Circle = styled.div`\n  width: 350px;\n  height: 350px;\n\n  background-color: ${props => props.theme.colors.primary};\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  div {\n    background-color: ${props => props.theme.colors.background};\n    width: 90%;\n    height: 90%;\n\n    border-radius: 50%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    color: ${props => props.theme.colors.text};\n    box-shadow: inset 0 0 10px ${props => props.theme.colors.primary};\n\n    strong {\n      font-size: 72px;\n      display: block;\n    }\n\n    p {\n      font-size: 32px;\n      opacity: 0.8;\n    }\n    /* text-align: center; */\n  }\n`;\n","import styled from 'styled-components';\nimport { shade } from 'polished';\n\nexport const Container = styled.button`\n  /* background-color: #ececec; */\n  /* border: 2px solid ${props => props.theme.colors.buttonsColor}; */\n  /* border: none; */\n\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n  background-color: ${props => props.theme.colors.buttonsBkg};\n\n  color: ${props => props.theme.colors.text};\n  border: 2px solid ${props => props.theme.colors.primary};\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  &:hover {\n    background: ${props => shade(0.15, props.theme.colors.buttonsBkg)};\n  }\n\n  &:focus:not(:focus-visible) {\n    box-shadow: none;\n  }\n\n  &:focus-visible {\n    border-color: ${props => props.theme.colors.secondary};\n\n    box-shadow: 0 0 4px 2px ${props => shade(0.2, props.theme.colors.secondary)};\n  }\n`;\n","import React, { ButtonHTMLAttributes } from 'react';\n\nimport { Container } from './styles';\n\ntype ButtonProps = ButtonHTMLAttributes<HTMLButtonElement>;\n\nconst Button: React.FC<ButtonProps> = ({ children, ...rest }) => (\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  <Container {...rest}>{children}</Container>\n);\n\nexport default Button;\n","export default __webpack_public_path__ + \"static/media/done-notification.fc6582f3.mp3\";","// import React, { createContext, useState } from 'react';\nimport React, { createContext, useState } from 'react';\n\n// import usePersistedState from '../usePersistedState';\n\ntype TimerProviderProps = { children: React.ReactNode };\n\ntype TimerContextProps = {\n  session: number;\n  break: number;\n  longBreak: number;\n  time: TimeProps;\n  label: string;\n  isActive: boolean;\n};\n\ntype TimerContextState = {\n  seconds: TimerContextProps;\n  setSeconds: React.Dispatch<React.SetStateAction<TimerContextProps>>;\n};\n\ntype TimeProps = {\n  startingTime: number;\n  currentTime: number;\n};\n\nconst defaultTimer: TimerContextProps = {\n  session: 25 * 60,\n  break: 5 * 60,\n  longBreak: 20 * 60,\n  time: { currentTime: 25 * 60, startingTime: 25 * 60 },\n  label: 'Focus',\n  isActive: false,\n};\n\nconst defautTimerState: TimerContextState = {\n  seconds: defaultTimer,\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  setSeconds: (): void => {},\n};\nexport const TimerContext = createContext<TimerContextState>(defautTimerState);\n\nexport const TimerProvider = ({ children }: TimerProviderProps) => {\n  const [seconds, setSeconds] = useState<TimerContextProps>(defaultTimer);\n\n  return (\n    <TimerContext.Provider value={{ seconds, setSeconds }}>\n      {children}\n    </TimerContext.Provider>\n  );\n};\n","/* eslint-disable react/jsx-filename-extension */\nimport * as React from 'react';\n\ntype Action = {\n  type: 'toggleStart';\n};\n// eslint-disable-next-line no-unused-vars\ntype Dispatch = (action: Action) => void;\ntype State = { autoStart: boolean };\ntype StartProviderProps = { children: React.ReactNode };\n\nconst StartStateContext = React.createContext<State | undefined>(undefined);\nconst StartDispatchContext = React.createContext<Dispatch | undefined>(\n  undefined,\n);\n\nfunction startReducer(state: State, action: Action) {\n  switch (action.type) {\n    case 'toggleStart': {\n      return { autoStart: !state.autoStart };\n    }\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n\nfunction StartProvider({ children }: StartProviderProps) {\n  const [state, dispatch] = React.useReducer(startReducer, {\n    autoStart: false,\n  });\n\n  return (\n    <StartStateContext.Provider value={state}>\n      <StartDispatchContext.Provider value={dispatch}>\n        {children}\n      </StartDispatchContext.Provider>\n    </StartStateContext.Provider>\n  );\n}\n\nfunction useStartState() {\n  const context = React.useContext(StartStateContext);\n  if (context === undefined) {\n    throw new Error('useTimerState must be used within a StartProvider');\n  }\n  return context;\n}\n\nfunction useStartDispatch() {\n  const context = React.useContext(StartDispatchContext);\n  if (context === undefined) {\n    throw new Error('useStartDispatch must be used within a StartProvider');\n  }\n  return context;\n}\nexport { StartProvider, useStartState, useStartDispatch };\n","/* eslint-disable jsx-a11y/media-has-caption */\nimport React, { useEffect, useState, useContext } from 'react';\nimport { FaPlay, FaUndoAlt, FaStepForward, FaPause } from 'react-icons/fa';\nimport useSound from 'use-sound';\n// import { useSpring, animated } from 'react-spring';\nimport { Circle, Container, TimerContainer } from './style';\nimport Button from '../../components/button';\nimport doneAudio from '../../assets/done-notification.mp3';\nimport { TimerContext } from '../../hooks/timer/TimerContext';\nimport { useStartState } from '../../hooks/autoStart/StartContext';\n\nconst TimerPomodoro: React.FC = () => {\n  const { seconds, setSeconds } = useContext(TimerContext);\n  const [count, setCount] = useState(1);\n\n  const [play] = useSound(doneAudio);\n  const { autoStart } = useStartState();\n  useEffect(() => {\n    const id = setInterval(() => {\n      if (seconds.isActive === true && seconds.time.currentTime > 0) {\n        setSeconds({\n          ...seconds,\n          time: {\n            startingTime: seconds.time.startingTime,\n            currentTime: seconds.time.currentTime - 1,\n          },\n        });\n      }\n      if (seconds.time.currentTime === 0) {\n        play();\n        // setSeconds({ ...seconds, isActive: false });\n        handleSwitch();\n        if (seconds.label !== 'Focus') {\n          setCount(c => (c % 4) + 1);\n          alert('Time to focus! 🎯');\n        } else {\n          alert('Time for a Break! ☕');\n        }\n      }\n    }, 1000);\n    return () => {\n      clearInterval(id);\n    };\n  }, [seconds, play]);\n\n  const handleSwitch = () => {\n    if (seconds.label === 'Focus') {\n      if (count === 4) {\n        setSeconds({\n          ...seconds,\n          time: {\n            startingTime: seconds.longBreak,\n            currentTime: seconds.longBreak,\n          },\n          label: 'Break',\n          isActive: autoStart,\n        });\n      } else {\n        // alert('Time for a Break! ☕');\n        setSeconds({\n          ...seconds,\n          time: {\n            currentTime: seconds.break,\n            startingTime: seconds.break,\n          },\n          label: 'Break',\n          isActive: autoStart,\n        });\n      }\n    } else {\n      // alert('Time to focus! 🎯');\n      setSeconds({\n        ...seconds,\n        time: {\n          startingTime: seconds.session,\n          currentTime: seconds.session,\n        },\n        label: 'Focus',\n        isActive: autoStart,\n      });\n    }\n  };\n  function startTimer() {\n    setSeconds({ ...seconds, isActive: true });\n  }\n  function pauseTimer() {\n    setSeconds({ ...seconds, isActive: false });\n  }\n  function resetTimer() {\n    setSeconds({\n      ...seconds,\n      isActive: autoStart,\n      time: {\n        startingTime: seconds.time.startingTime,\n        currentTime: seconds.time.startingTime,\n      },\n    });\n  }\n\n  return (\n    <>\n      <Container>\n        {/* <NavBar /> */}\n        <TimerContainer>\n          <Circle>\n            <div>\n              <strong>\n                {`${Math.floor(seconds.time.currentTime / 60)}:${`00${\n                  seconds.time.currentTime % 60\n                }`.slice(-2)}`}\n              </strong>\n              <p>{seconds.label}</p>\n            </div>\n          </Circle>\n          <p>\n            {count}\n            /4\n          </p>\n          <div>\n            <Button type=\"button\" onClick={resetTimer} title=\"reset\">\n              <FaUndoAlt />\n            </Button>\n\n            <Button\n              type=\"button\"\n              title={seconds.isActive ? 'pause' : 'play'}\n              onClick={seconds.isActive ? pauseTimer : startTimer}\n              className=\"Play\"\n            >\n              {seconds.isActive ? <FaPause /> : <FaPlay />}\n            </Button>\n\n            <Button\n              type=\"button\"\n              title=\"next\"\n              onClick={() => {\n                handleSwitch();\n                if (seconds.label === 'Break') {\n                  setCount(c => (c % 4) + 1);\n                }\n              }}\n            >\n              <FaStepForward />\n            </Button>\n          </div>\n        </TimerContainer>\n      </Container>\n    </>\n  );\n};\n\nexport default TimerPomodoro;\n","import styled from 'styled-components';\n// import Settings from '../../components/settings';\n\nexport const Container = styled.div`\n  width: 100vw;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-top: -10vh;\n`;\n","import styled from 'styled-components';\nimport { shade } from 'polished';\n\nexport const Container = styled.div`\n  max-width: 500px;\n  /* border: 1px solid black; */\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 0 auto;\n  height: 100vh;\n  @media (min-width: 641px) {\n    /* padding-left: 108px; */\n  }\n\n  /* padding: 30px; */\n\n  > button {\n    background-color: ${props => props.theme.colors.secondary};\n    color: #f2f2fa;\n    border: none;\n    border-radius: 5px;\n    padding: 5px 10px;\n    margin-top: 5vh;\n\n    &:hover {\n      background-color: ${props => shade(0.2, props.theme.colors.secondary)};\n    }\n    &:active {\n      transform: scale(0.96);\n    }\n\n    &:focus:not(:focus-visible) {\n      box-shadow: none;\n    }\n    &:focus-visible {\n      box-shadow: 0 0 6px 4px\n        ${props => shade(0.2, props.theme.colors.secondary)};\n    }\n  }\n\n  h1 {\n    margin-bottom: 10vh;\n    letter-spacing: 0.05em;\n  }\n`;\n\nexport const ControllersWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  h2,\n  button,\n  span {\n    color: #f2f2fa;\n  }\n\n  button:focus {\n    color: ${props => props.theme.colors.secondary};\n    font-weight: 600;\n  }\n\n  > div {\n    border-radius: 10px;\n    background-color: ${props => props.theme.colors.primary};\n    color: ${props => props.theme.colors.background};\n    padding: 5px 15px;\n    min-width: 300px;\n    max-width: 350px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    & + div {\n      margin-top: 16px;\n    }\n\n    > div {\n      display: flex;\n      flex-direction: column;\n      button {\n        height: 20px;\n        background: none;\n        border: none;\n      }\n    }\n    span {\n      margin-right: 16px;\n      font-weight: 600;\n    }\n\n    h2 {\n      flex: 1;\n      font-size: 1rem;\n    }\n  }\n\n  @media (min-width: 641px) {\n    flex-direction: row;\n    margin-top: 5vh;\n\n    > div {\n      max-width: 120px;\n      min-width: 120px;\n      padding: 2%;\n\n      & + div {\n        margin-left: 20px;\n        margin-top: 0;\n      }\n    }\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n  margin-top: 30px;\n\n  .react-switch {\n    display: inline-block;\n  }\n`;\n","import { useState, useEffect, Dispatch, SetStateAction } from 'react';\n\ntype Response<T> = [T, Dispatch<SetStateAction<T>>];\n\nfunction usePersistedState<T>(key: string, initialState: T): Response<T> {\n  const [state, setState] = useState(() => {\n    const storageValue = localStorage.getItem(key);\n\n    if (storageValue) {\n      return JSON.parse(storageValue);\n    }\n    return initialState;\n  });\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setState];\n}\n\nexport default usePersistedState;\n","export default {\n  title: 'light',\n\n  colors: {\n    primary: '#1d3557',\n    secondary: '#e63946',\n\n    background: '#F2F2FA',\n    text: '#333',\n    icons: '#a8dadc',\n    buttonsColor: '#1d3557',\n    buttonsBkg: '#F2F2FA',\n  },\n\n  fontWeight: 400,\n};\n","export default {\n  title: 'dark',\n\n  colors: {\n    primary: '#14253D',\n    // background: '#333',\n    // primary: '#0D1B2A',\n    secondary: '#e63946',\n\n    background: '#111111',\n    text: '#F2F2FA',\n    icons: '#a8dadc',\n    buttonsColor: '#a8dadc',\n    // buttonsBkg: '#0D1B2A',\n    buttonsBkg: '#14253D',\n  },\n\n  fontWeight: 300,\n};\n","import React, { createContext } from 'react';\nimport { DefaultTheme } from 'styled-components';\n\nimport usePersistedState from '../usePersistedState';\n\nimport light from '../../styles/themes/light';\nimport dark from '../../styles/themes/dark';\n\ninterface ThemeContextData {\n  toggleTheme(): void;\n  theme: DefaultTheme;\n}\n\nconst ThemeContext = createContext<ThemeContextData>({} as ThemeContextData);\n\nconst ThemeContextProvider: React.FC = ({ children }) => {\n  const [theme, setTheme] = usePersistedState<DefaultTheme>('@theme', light);\n\n  function toggleTheme() {\n    setTheme(theme.title === 'light' ? dark : light);\n  }\n\n  return (\n    <ThemeContext.Provider value={{ toggleTheme, theme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport { ThemeContext, ThemeContextProvider };\n","import { useContext } from 'react';\nimport { ThemeContext } from './ToggleThemeContext';\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction useToggleTheme() {\n  const context = useContext(ThemeContext);\n\n  return context;\n}\n\nexport default useToggleTheme;\n","/* eslint-disable react/jsx-curly-newline */\nimport React, { useContext } from 'react';\n// import Switch from 'react-switch';\nimport { ThemeContext } from 'styled-components';\nimport Switch from 'react-switch';\nimport { shade } from 'polished';\nimport { Container, ControllersWrapper, Wrapper } from './style';\nimport useToggleTheme from '../../hooks/theme/useToggleTheme';\nimport {\n  useStartDispatch,\n  useStartState,\n} from '../../hooks/autoStart/StartContext';\nimport { TimerContext } from '../../hooks/timer/TimerContext';\n\nconst Configs: React.FC = () => {\n  const theme = useContext(ThemeContext);\n  const { seconds, setSeconds } = useContext(TimerContext);\n\n  const { toggleTheme } = useToggleTheme();\n  const dispach = useStartDispatch();\n  const { autoStart } = useStartState();\n\n  return (\n    <Container>\n      <h1>Settings</h1>\n      <ControllersWrapper>\n        <div>\n          <h2>Focus Time</h2>\n          <span>{seconds.session / 60}</span>\n          <div>\n            <button\n              type=\"button\"\n              onClick={() =>\n                setSeconds({\n                  ...seconds,\n                  session: seconds.session + 60,\n                  time: {\n                    startingTime: seconds.session + 60,\n                    currentTime: seconds.session + 60,\n                  },\n                })\n              }\n            >\n              +\n            </button>\n            <button\n              type=\"button\"\n              onClick={() =>\n                setSeconds({\n                  ...seconds,\n                  session: seconds.session - 60,\n                  time: {\n                    startingTime: seconds.session - 60,\n                    currentTime: seconds.session - 60,\n                  },\n                })\n              }\n            >\n              -\n            </button>\n          </div>\n        </div>\n\n        <div>\n          <h2>Short Break</h2>\n          <span>{seconds.break / 60}</span>\n          <div>\n            <button\n              type=\"button\"\n              onClick={() =>\n                setSeconds({\n                  ...seconds,\n                  break: seconds.break + 60,\n                  time: {\n                    startingTime: seconds.break + 60,\n                    currentTime: seconds.break + 60,\n                  },\n                })\n              }\n            >\n              +\n            </button>\n            <button\n              type=\"button\"\n              onClick={() =>\n                setSeconds({\n                  ...seconds,\n                  break: seconds.break - 60,\n                  time: {\n                    startingTime: seconds.break - 60,\n                    currentTime: seconds.break - 60,\n                  },\n                })\n              }\n            >\n              -\n            </button>\n          </div>\n        </div>\n\n        <div>\n          <h2>Long Break </h2>\n          <span>{seconds.longBreak / 60}</span>\n          <div>\n            <button\n              type=\"button\"\n              onClick={() =>\n                setSeconds({\n                  ...seconds,\n                  longBreak: seconds.longBreak + 60,\n                  time: {\n                    startingTime: seconds.longBreak + 60,\n                    currentTime: seconds.longBreak + 60,\n                  },\n                })\n              }\n            >\n              +\n            </button>\n            <button\n              type=\"button\"\n              onClick={() =>\n                setSeconds({\n                  ...seconds,\n                  longBreak: seconds.longBreak - 60,\n                  time: {\n                    startingTime: seconds.longBreak - 60,\n                    currentTime: seconds.longBreak - 60,\n                  },\n                })\n              }\n            >\n              -\n            </button>\n          </div>\n        </div>\n      </ControllersWrapper>\n      <Wrapper>\n        <strong>Auto start next round?</strong>\n        <Switch\n          id=\"autoSwitch\"\n          checked={autoStart === true}\n          onChange={() => dispach({ type: 'toggleStart' })}\n          offColor={shade(0.15, theme.colors.secondary)}\n          onColor={theme.colors.primary}\n          height={26}\n        />\n      </Wrapper>\n      <Wrapper>\n        <strong>Dark mode</strong>\n        <Switch\n          id=\"darkSwitch\"\n          checked={theme.title !== 'light'}\n          onChange={toggleTheme}\n          offColor={shade(0.15, theme.colors.secondary)}\n          onColor={theme.colors.primary}\n          height={26}\n        />\n      </Wrapper>\n      <button\n        type=\"button\"\n        onClick={() =>\n          setSeconds({\n            ...seconds,\n            session: 25 * 60,\n            break: 5 * 60,\n            longBreak: 20 * 60,\n            time: {\n              startingTime: 25 * 60,\n              currentTime: 25 * 60,\n            },\n            label: 'Focus',\n          })\n        }\n      >\n        Reset Timer Settings\n      </button>\n    </Container>\n  );\n};\n\nexport default Configs;\n","import React from 'react';\nimport { Container } from './style';\nimport Sett from '../../components/settings';\n// import Nav from '../../components/navbar';\n\nconst Settings: React.FC = () => {\n  return (\n    <Container>\n      {/* <Nav /> */}\n      <Sett />\n    </Container>\n  );\n};\nexport default Settings;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100vw;\n\n  h1 {\n    color: ${props => props.theme.colors.secondary};\n    text-align: left;\n    letter-spacing: 0.05em;\n    margin-top: 36px;\n  }\n\n  @media (min-width: 641px) {\n    h1 {\n      margin: 36px 0 20px 0;\n    }\n  }\n`;\n\nexport const ContentWrapper = styled.div`\n  background-color: rgba(135, 135, 135, 0.1);\n  width: 90%;\n  margin-top: 36px;\n  padding: 20px;\n  border-radius: 10px;\n  height: 80vh;\n  overflow: scroll;\n  ol {\n    list-style: none;\n    counter-reset: li;\n\n    li {\n      counter-increment: li;\n      margin-top: 0.5em;\n      /* p {\n        text-align: justify;\n      } */\n    }\n    li::before {\n      content: counter(li);\n      color: ${props => props.theme.colors.secondary};\n      display: inline-block;\n      width: 1em;\n      margin-right: 0.5em;\n      text-align: left;\n      direction: rtl;\n    }\n  }\n\n  .font {\n    margin-top: 30px;\n    a {\n      color: ${props => props.theme.colors.secondary};\n    }\n  }\n  @media (min-width: 641px) {\n    max-width: 700px;\n\n    margin: 0 auto;\n    position: relative;\n    left: 16px;\n    padding: 30px;\n    height: max-content;\n    overflow: unset;\n  }\n`;\n","import React from 'react';\nimport { Container, ContentWrapper } from './styles';\n\nconst About: React.FC = () => {\n  return (\n    <Container>\n      <h1>About</h1>\n      <ContentWrapper>\n        <p>\n          The\n          <strong> Pomodoro Technique </strong>\n          is a time managment method developed by the Italian Francesco Cirilo,\n          who was at the time a student.\n        </p>\n        <br />\n        <p>\n          The Method consists on cicles of concentration and breaks. The focus\n          period is usually set to be 25 minutes, and during this time all\n          distractions should be avoided.\n        </p>\n        <br />\n        <p>\n          After, comes the break, that should be around 3-5 minutes. However,\n          the duration of the 4th break are higher (15-30 minutes).\n        </p>\n        <br />\n        <p>Summaring: </p>\n        <p>\n          <br />\n          <ol>\n            <li>Decide on the task to be done.</li>\n            <li>Set the pomodoro timer (traditionally to 25 minutes).</li>\n            <li>Work on the task.</li>\n            <li>\n              End work when the timer rings and put a checkmark on a piece of\n              paper.\n            </li>\n            <li>\n              If you have fewer than four checkmarks, take a short break (3–5\n              minutes) and then return to step 2, otherwise continue to step 6.\n            </li>\n            <li>\n              After four pomodoros, take a longer break (15–30 minutes), reset\n              your checkmark count to zero, then go to step 1.\n            </li>\n          </ol>\n        </p>\n        <p className=\"font\">\n          <small>\n            {/* eslint-disable-next-line react/jsx-one-expression-per-line */}\n            Font:{' '}\n            <a href=\"https://en.wikipedia.org/wiki/Pomodoro_Technique\">\n              https://en.wikipedia.org/wiki/Pomodoro_Technique\n            </a>\n          </small>\n        </p>\n      </ContentWrapper>\n    </Container>\n  );\n};\n\nexport default About;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport { shade } from 'polished';\n\ninterface Props {\n  active: boolean;\n}\n\nconst size = {\n  medium: '641px',\n  large: '1007px',\n};\n\nexport const BurgerIcon = styled.div<Props>`\n  button {\n    background: none;\n    border: none;\n    position: relative;\n    transition: left 0.2s;\n    top: 36px;\n    left: ${props => (props.active ? '250px' : '36px')};\n    color: ${props => props.theme.colors.secondary};\n\n    &:focus:not(:focus-visible) {\n      box-shadow: none;\n    }\n    &:focus-visible {\n      box-shadow: 0 0 6px 4px\n        ${props => shade(0.2, props.theme.colors.secondary)};\n    }\n  }\n`;\n\nexport const Container = styled.div<Props>`\n  position: fixed;\n  width: ${props => (props.active ? '300px' : '108px')};\n  transition: width 0.2s;\n  height: 100vh;\n  top: 0px;\n  left: 0px;\n  background: ${props => (props.active ? props.theme.colors.primary : 'none')};\n  z-index: 1;\n  span {\n    color: #fafaf2;\n  }\n  /* background-color: none; */\n  @media (min-width: ${size.medium}) {\n    /* position: inherit; */\n    background-color: ${props => props.theme.colors.primary};\n  }\n`;\n\nexport const ListWrapper = styled.div<Props>`\n  width: 108px;\n  margin: 50px 0 0 30px;\n  display: flex;\n  align-items: center;\n\n  position: fixed;\n  font-size: 24px;\n  display: ${props => (props.active ? 'block' : 'none')};\n\n  ul {\n    list-style: none;\n    width: 300px;\n\n    li {\n      display: flex;\n      height: 50px;\n      width: 100%;\n\n      @media (min-width: ${size.medium}) {\n        margin-top: 30px;\n      }\n    }\n  }\n`;\n\nexport const StyledNavLink = styled(NavLink)<Props>`\n  display: flex;\n  align-items: center;\n  width: 200px;\n  height: 50px;\n  color: #fafaf2;\n\n  svg {\n    margin-right: 12px;\n  }\n  &:link,\n  &:active {\n    border: none;\n    text-decoration: none;\n  }\n\n  &:focus:not(:focus-visible) {\n    outline: none;\n  }\n\n  &:focus-visible {\n    outline: 2px solid #1a1a1a;\n  }\n\n  svg {\n    color: ${props => props.theme.colors.icons};\n    text-decoration: none;\n    opacity: 0.8;\n    border: none;\n\n    &:hover {\n      color: ${shade(0.2, '#a8dadc')};\n    }\n  }\n  &.selected {\n    svg {\n      color: ${props => props.theme.colors.secondary};\n    }\n  }\n\n  @media (min-width: ${size.medium}) {\n    justify-content: ${props => (props.active ? 'flex-start' : 'center')};\n    align-items: ${props => (props.active ? 'left' : 'center')};\n\n    span:hover {\n      color: ${props => props.theme.colors.secondary};\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport {\n  FaRegClock,\n  FaUserCircle,\n  FaRegChartBar,\n  FaInfoCircle,\n  FaTimes,\n} from 'react-icons/fa';\n\nimport { FiSettings, FiLogOut, FiMenu } from 'react-icons/fi';\n\nimport { BurgerIcon, ListWrapper, Container, StyledNavLink } from './styles';\n\nconst BurgerMenu: React.FC = () => {\n  const icons = {\n    LogIn: <FaUserCircle size={32} title=\"logIn\" />,\n    Timer: <FaRegClock size={28} title=\"timer\" />,\n    Stats: <FaRegChartBar size={20} title=\"Statistics\" />,\n    Settings: <FiSettings size={28} title=\"settings\" />,\n    LogOut: <FiLogOut size={20} title=\"LogOut\" />,\n    About: <FaInfoCircle size={28} title=\"about\" />,\n    Menu: <FiMenu size={36} title=\"menu\" />,\n    Close: <FaTimes size={36} title=\"close menu\" />,\n  };\n\n  const [isOpen, setIsOpen] = useState(false);\n  const handleMenu = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <Container active={isOpen}>\n      <BurgerIcon active={isOpen}>\n        <button type=\"button\" onClick={handleMenu}>\n          {isOpen ? icons.Close : icons.Menu}\n        </button>\n      </BurgerIcon>\n      <ListWrapper active={isOpen}>\n        <nav>\n          <ul>\n            <li>\n              <StyledNavLink\n                exact\n                to=\"/\"\n                activeClassName=\"selected\"\n                onClick={handleMenu}\n                active={isOpen}\n              >\n                {icons.Timer}\n                <span>Timer</span>\n              </StyledNavLink>\n            </li>\n\n            <li>\n              <StyledNavLink\n                to=\"/settings\"\n                activeClassName=\"selected\"\n                onClick={handleMenu}\n                active={isOpen}\n              >\n                {icons.Settings}\n                <span>Settings</span>\n              </StyledNavLink>\n            </li>\n\n            <li>\n              <StyledNavLink\n                to=\"/about\"\n                activeClassName=\"selected\"\n                onClick={handleMenu}\n                active={isOpen}\n              >\n                {icons.About}\n                <span>About</span>\n              </StyledNavLink>\n            </li>\n          </ul>\n        </nav>\n      </ListWrapper>\n    </Container>\n  );\n};\n\nexport default BurgerMenu;\n","import React from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\n\nimport Timer from '../pages/timer/index';\nimport Settings from '../pages/settings/index';\nimport About from '../pages/about';\nimport Menu from '../components/menu/index';\n// import { Container } from './styles';\n\nconst Routes: React.FC = () => (\n  <HashRouter basename=\"/\">\n    <Menu />\n    <Switch>\n      <Route path=\"/\" exact component={Timer} />\n      <Route path=\"/settings\" component={Settings} />\n      <Route path=\"/about\" component={About} />\n    </Switch>\n  </HashRouter>\n);\nexport default Routes;\n","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  *{\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n\n    &::not(.focus-visible) {\n      outline: none;\n    }\n    }\n\n  body{\n    background: ${props => props.theme.colors.background};\n    color: ${props => props.theme.colors.text};\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  body, input, button{\n    font: 1rem Roboto, sans-serif;\n    font-weight: ${props => props.theme.fontWeight} ;\n  }\n\n  strong, p, h1, h2, span {\n    color: ${props => props.theme.colors.text};\n  }\n\n  /* #root{\n    max-width: 48vw;\n    margin: 0 auto;\n    padding: 40px 20px;\n  } */\n\n  button{\n    cursor: pointer;\n  }\n`;\n","// eslint-disable-next-line no-use-before-define\nimport React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\nimport { Beforeunload } from 'react-beforeunload';\nimport Routes from './routes';\nimport GlobalStyle from './styles/global';\nimport useToggleTheme from './hooks/theme/useToggleTheme';\n\nconst App: React.FC = () => {\n  const { theme } = useToggleTheme();\n  return (\n    <Beforeunload onBeforeunload={() => \"You'll lose your data!\"}>\n      <ThemeProvider theme={theme}>\n        <GlobalStyle />\n        <Router>\n          <Routes />\n        </Router>\n      </ThemeProvider>\n    </Beforeunload>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ThemeContextProvider } from './hooks/theme/ToggleThemeContext';\nimport { TimerProvider } from './hooks/timer/TimerContext';\nimport { StartProvider } from './hooks/autoStart/StartContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeContextProvider>\n      <StartProvider>\n        <TimerProvider>\n          <App />\n        </TimerProvider>\n      </StartProvider>\n    </ThemeContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}